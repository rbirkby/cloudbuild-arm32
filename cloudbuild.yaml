steps:
  # - id: build-arm32
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:arm32', '-f=Dockerfile', '.']
  #   waitFor: ['-']

  # - id: build-cloudrun
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:cloudrun', '-f=Dockerfile.cloudrun', '.']
  #   waitFor: ['-']

  # - id: build-golang
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:golang', '-f=Dockerfile.golang', '.']
  #   waitFor: ['-']

  # - id: build-python
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:python', '-f=Dockerfile.python', '.']
  #   waitFor: ['-']

  # - id: prep-shim
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ['run', '--rm', '--privileged', 'multiarch/qemu-user-static:register', '--reset']
  #   waitFor: ['-']

  - id: prep-shim
    name: multiarch/qemu-user-static:register
    args: ['--reset']
    waitFor: ['-']    

  - id: build-led
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:led', '-f=Dockerfile.led', '.']
    waitFor: [prep-shim]

  # - id: build-inky
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:inky', '-f=Dockerfile.inky', '.']
  #   waitFor: [prep-shim]    

  - id: build-tof
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:tof', '-f=Dockerfile.tof', '.']
    waitFor: [prep-shim]   

  - id: build-buttons
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t=gcr.io/$PROJECT_ID/cloudbuild-arm32:buttons', '-f=Dockerfile.buttons', '.']
    waitFor: [prep-shim]       

  # - id: push-cloudrun
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ["push", "gcr.io/$PROJECT_ID/cloudbuild-arm32:cloudrun"]
  #   waitFor: [build-cloudrun]

  # - id: push-python
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ["push", "gcr.io/$PROJECT_ID/cloudbuild-arm32:python"]
  #   waitFor: [build-python]

  - id: push-led
    name: 'gcr.io/cloud-builders/docker'
    args: ["push", "gcr.io/$PROJECT_ID/cloudbuild-arm32:led"]
    waitFor: [build-led]

  # - id: push-inky
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: ["push", "gcr.io/$PROJECT_ID/cloudbuild-arm32:inky"]
  #   waitFor: [build-inky]

  - id: push-tof
    name: 'gcr.io/cloud-builders/docker'
    args: ["push", "gcr.io/$PROJECT_ID/cloudbuild-arm32:tof"]
    waitFor: [build-tof]

  - id: push-buttons
    name: 'gcr.io/cloud-builders/docker'
    args: ["push", "gcr.io/$PROJECT_ID/cloudbuild-arm32:buttons"]
    waitFor: [build-buttons]

  # - id: deploy-cloudrun
  #   name: 'gcr.io/cloud-builders/gcloud'
  #   args: ['alpha', 'serverless', 'deploy', 'cloudbuild-arm32', '--image', 'gcr.io/$PROJECT_ID/cloudbuild-arm32:cloudrun', '--region', 'us-central1']
  #   waitFor: [push-cloudrun]

  # - id: deploy-python
  #   name: 'gcr.io/cloud-builders/gcloud'
  #   args: ['alpha', 'serverless', 'deploy', 'cloudbuild-python', '--image', 'gcr.io/$PROJECT_ID/cloudbuild-arm32:python', '--region', 'us-central1']
  #   waitFor: [push-python]

images:
  # - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:arm32'
  # - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:cloudrun'
  # - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:golang'
  # - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:python'
  - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:led'
  # - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:inky'
  - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:buttons'
  - 'gcr.io/$PROJECT_ID/cloudbuild-arm32:tof'

tags:
  - cloud-run-playground
  - arm32